{
    "connections": [
        {
            "in_node": "transform_0",
            "in_port": "in_anim",
            "out_node": "amc_0",
            "out_port": "animation"
        },
        {
            "in_node": "amc_0",
            "in_port": "skeleton",
            "out_node": "asf_0",
            "out_port": "skeleton"
        },
        {
            "in_node": "detect_stationary_1",
            "in_port": "in_constraints",
            "out_node": "detect_stationary_0",
            "out_port": "out_constraints"
        },
        {
            "in_node": "filter_median_0",
            "in_port": "in_constraints",
            "out_node": "detect_stationary_1",
            "out_port": "out_constraints"
        },
        {
            "in_node": "display_0",
            "in_port": "constraints",
            "out_node": "filter_median_0",
            "out_port": "out_constraints"
        },
        {
            "in_node": "network_0",
            "in_port": "anim_frame",
            "out_node": "from_animation_0",
            "out_port": "frame"
        },
        {
            "in_node": "detect_stationary_0",
            "in_port": "in_constraints",
            "out_node": "from_animation_1",
            "out_port": "constraints"
        },
        {
            "in_node": "from_animation_0",
            "in_port": "time",
            "out_node": "time_0",
            "out_port": "time"
        },
        {
            "in_node": "from_animation_1",
            "in_port": "animation",
            "out_node": "transform_0",
            "out_port": "out_anim"
        },
        {
            "in_node": "from_animation_0",
            "in_port": "animation",
            "out_node": "transform_0",
            "out_port": "out_anim"
        }
    ],
    "description": "### Footstep detection\n\nAnimations represented as sequences of poses of hierarchical skeletons do not naturally represent information about character interaction with the environment. This information is necessary for motion editing to maintain desirable properties, such as realistic stationary footsteps. A number of methods has been used to perform this task, but a simple velocity thresholding has proven sufficient for most practical applications.\n\nThis demo shows how this simple technique can be used in Possumwood. The resulting constraint information can be further processed via median filtering, to remove any noise introduced in the detection process.\n\n<sub>Kovar, Lucas, John Schreiner, and Michael Gleicher. [\"Footskate cleanup for motion capture editing.\"](http://kucg.korea.ac.kr/seminar/2005/src/PA-05-01.pdf) Proceedings of the 2002 ACM SIGGRAPH/Eurographics symposium on Computer animation. ACM, 2002.</sub>\n\n<sub>Ikemoto, Leslie, Okan Arikan, and David Forsyth. [\"Knowing when to put your foot down.\"](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.151.1882&rep=rep1&type=pdf) Proceedings of the 2006 symposium on Interactive 3D graphics and games. ACM, 2006.</sub>",
    "nodes": {
        "amc_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 145.042449951172,
                    "y": 58.0037956237793
                }
            },
            "name": "amc",
            "ports": {
                "filename": "$EXAMPLES/cmu_mocap/83_27.amc"
            },
            "type": "anim/loaders/amc"
        },
        "asf_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 141.171417236328,
                    "y": -93.7052459716797
                }
            },
            "name": "asf",
            "ports": {
                "filename": "$EXAMPLES/cmu_mocap/83.asf"
            },
            "type": "anim/loaders/asf"
        },
        "detect_stationary_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -208.620971679688,
                    "y": 618.080139160156
                }
            },
            "name": "detect_stationary",
            "ports": {
                "joint": "rfoot",
                "velocity_threshold": 0.5
            },
            "type": "anim/constraints/detect_stationary"
        },
        "detect_stationary_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -209.58154296875,
                    "y": 801.877685546875
                }
            },
            "name": "detect_stationary",
            "ports": {
                "joint": "lfoot",
                "velocity_threshold": 0.5
            },
            "type": "anim/constraints/detect_stationary"
        },
        "display_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -195.897338867188,
                    "y": 1103.77575683594
                }
            },
            "name": "display",
            "ports": {
                "colour": {
                    "x": 1.0,
                    "y": 0.0,
                    "z": 0.0
                },
                "show_constrained": false,
                "show_trajectory": true
            },
            "type": "anim/constraints/display"
        },
        "filter_median_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -206.516021728516,
                    "y": 963.224426269531
                }
            },
            "name": "filter_median",
            "ports": {
                "median_width": 9
            },
            "type": "anim/constraints/filter_median"
        },
        "from_animation_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 118.995864868164,
                    "y": 471.468322753906
                }
            },
            "name": "from_animation",
            "type": "anim/frame/from_animation"
        },
        "from_animation_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -213.758422851562,
                    "y": 469.965515136719
                }
            },
            "name": "from_animation",
            "type": "anim/constraints/from_animation"
        },
        "network_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 289.03662109375,
                    "y": 640.990051269531
                }
            },
            "connections": [
                {
                    "in_node": "draw_0",
                    "in_port": "vertex_data",
                    "out_node": "anim_frame_0",
                    "out_port": "vertex_data"
                },
                {
                    "in_node": "draw_0",
                    "in_port": "uniforms",
                    "out_node": "float_0",
                    "out_port": "out_uniforms"
                },
                {
                    "in_node": "program_0",
                    "in_port": "fragment_shader",
                    "out_node": "fragment_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "program_0",
                    "in_port": "geometry_shader",
                    "out_node": "geometry_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "vec3_0",
                    "in_port": "value",
                    "out_node": "input_0",
                    "out_port": "data"
                },
                {
                    "in_node": "float_0",
                    "in_port": "value",
                    "out_node": "input_1",
                    "out_port": "data"
                },
                {
                    "in_node": "anim_frame_0",
                    "in_port": "frame",
                    "out_node": "input_2",
                    "out_port": "data"
                },
                {
                    "in_node": "draw_0",
                    "in_port": "program",
                    "out_node": "program_0",
                    "out_port": "program"
                },
                {
                    "in_node": "float_0",
                    "in_port": "in_uniforms",
                    "out_node": "vec3_0",
                    "out_port": "out_uniforms"
                },
                {
                    "in_node": "program_0",
                    "in_port": "vertex_shader",
                    "out_node": "vertex_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "vec3_0",
                    "in_port": "in_uniforms",
                    "out_node": "viewport_0",
                    "out_port": "out_uniforms"
                }
            ],
            "name": "skeleton",
            "nodes": {
                "anim_frame_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 428.075958251953,
                            "y": 711.054016113281
                        }
                    },
                    "name": "anim_frame",
                    "type": "render/vertex_data/anim_frame"
                },
                "draw_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 741.257934570312,
                            "y": 544.379211425781
                        }
                    },
                    "name": "draw",
                    "type": "render/draw"
                },
                "float_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 739.986572265625,
                            "y": 336.014221191406
                        }
                    },
                    "name": "bone_width",
                    "ports": {
                        "name": "width"
                    },
                    "type": "render/uniforms/float"
                },
                "fragment_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 323.437377929688,
                            "y": 560.594970703125
                        }
                    },
                    "name": "fragment_shader",
                    "ports": {
                        "source": "#version 130 \n \nout vec4 color; \n \nin vec3 normal; \n\nuniform vec3 material;\n \nvoid main() { \n\tvec3 norm = normalize(normal);\n\n\tfloat val = abs(norm.z);\n\tcolor = vec4(vec3(val)*material, 1); \n\t//color = vec4(1,1,1,1);\n} \n"
                    },
                    "type": "render/fragment_shader"
                },
                "geometry_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 329.1552734375,
                            "y": 434.355621337891
                        }
                    },
                    "name": "geometry_shader",
                    "ports": {
                        "source": "#version 440\n\n#define SUBDIV 10\n\nuniform mat4 iProjection;\nuniform mat4 iModelView;\nuniform mat4 iModelViewNormal;\nuniform vec2 iResolution;\n\nuniform float width;\n\nlayout(lines) in;\nlayout(triangle_strip, max_vertices = (SUBDIV+1)*13) out;\n\nout vec3 normal;\n\nvec4 project(vec3 p, vec3 offset) {\n\treturn iProjection * iModelView * (vec4(p,1) + vec4(offset, 0)); \n}\n\nvec3 nproject(vec3 n) {\n\treturn (iModelViewNormal * vec4(n,1)).xyz; \n}\n\nvoid hemisphere(vec3 p1, vec3 dir, vec3 norm, vec3 binorm) {\n\tfor(int a=0;a<SUBDIV;++a) {\n\t\tnormal = nproject(dir);\n\t\tgl_Position = project(p1, dir);\n\t\tEmitVertex();\n\n\t\tfloat angle1 = float(a) / float(SUBDIV) * 3.1415 * 2.0;\n\t\tvec3 offset1 = norm*cos(angle1) + binorm*sin(angle1);\n\n\t\tfloat angle2 = float(a+1) / float(SUBDIV) * 3.1415 * 2.0;\n\t\tvec3 offset2 = norm*cos(angle2) + binorm*sin(angle2);\n\n\t\tfor(int b=1;b<=SUBDIV/4;++b) {\n\t\t\tfloat vangle = float(b) / float(SUBDIV/4) * 3.1415 / 2.0;\n\t\t\tfloat c = cos(vangle);\n\t\t\tfloat s = sin(vangle);\n\n\t\t\tvec3 o1 = c*dir + s*offset1;\n\t\t\tvec3 o2 = c*dir + s*offset2;\n\n\t\t\tnormal = nproject(o1);\n\t\t\tgl_Position = project(p1, o1);\n\t\t\tEmitVertex();\n\n\t\t\tnormal = nproject(o2);\n\t\t\tgl_Position = project(p1, o2);\n\t\t\tEmitVertex();\n\t\t}\n\t\tEndPrimitive();\n\t}\n}\n\nvoid doEmitLine(vec3 p1, vec3 p2) {\n\t// orthonormal basis to work with\n\tvec3 dir = p2-p1;\n\tdir = normalize(dir) * width;\n\n\tvec3 norm = vec3(dir.y-dir.z, dir.z-dir.x, dir.x-dir.y);\n\tnorm = normalize(norm) * width;\n\n\tvec3 binorm = cross(norm, dir);\n\tbinorm = normalize(binorm) * width;\n\n\t// cylinder\n\tfor(int a=0;a<=SUBDIV;++a) {\n\t\tfloat angle = float(a) / float(SUBDIV) * 3.1415 * 2.0;\n\t\tvec3 offset = norm*cos(angle) + binorm*sin(angle);\n\t\t\n\t\tnormal = nproject(offset);\n\t\tgl_Position = project(p1, offset);\n\t\tEmitVertex(); \n\t\tgl_Position = project(p2, offset);\n\t\tEmitVertex(); \n\t}\n\tEndPrimitive(); \n\n\t// hemispheres at the end\n\themisphere(p1, -dir, norm, binorm);\n\t// hemisphere(p2, dir, -norm, -binorm); // no need for a hemisphere at the front - never visible\n}\n\n\nvoid main() { \n\tfor(int i = 0; i < gl_in.length(); i+=2) { \n\t\t// each \"line\" is emitted as a triangle strip\n\t\tdoEmitLine(\n\t\t\tgl_in[i].gl_Position.xyz,\n\t\t\tgl_in[(i+1) % gl_in.length()].gl_Position.xyz\n\t\t);\n\t} \n} "
                    },
                    "type": "render/geometry_shader"
                },
                "input_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 563.533630371094,
                            "y": 229.284225463867
                        }
                    },
                    "name": "color",
                    "type": "input"
                },
                "input_1": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 557.374816894531,
                            "y": 348.355743408203
                        }
                    },
                    "name": "width",
                    "type": "input"
                },
                "input_2": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 282.278503417969,
                            "y": 724.046875
                        }
                    },
                    "name": "anim_frame",
                    "type": "input"
                },
                "program_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 530.351745605469,
                            "y": 480.039581298828
                        }
                    },
                    "name": "program",
                    "type": "render/program"
                },
                "vec3_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 745.4375,
                            "y": 169.73274230957
                        }
                    },
                    "name": "material_color",
                    "ports": {
                        "name": "material"
                    },
                    "type": "render/uniforms/vec3"
                },
                "vertex_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 353.27490234375,
                            "y": 315.953887939453
                        }
                    },
                    "name": "vertex_shader",
                    "ports": {
                        "source": "#version 130 \n\nin vec3 P;\n\nvoid main() {\n   \tgl_Position = vec4(P, 1);\n} "
                    },
                    "type": "render/vertex_shader"
                },
                "viewport_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 750.423278808594,
                            "y": 51.6120452880859
                        }
                    },
                    "name": "viewport",
                    "type": "render/uniforms/viewport"
                }
            },
            "ports": {
                "color": {
                    "x": 1.0,
                    "y": 0.5,
                    "z": 0.0
                },
                "width": 0.0199999995529652
            },
            "type": "network"
        },
        "time_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 26.6313591003418,
                    "y": 494.362487792969
                }
            },
            "name": "time",
            "type": "time"
        },
        "transform_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 142.866180419922,
                    "y": 244.406112670898
                }
            },
            "name": "transform",
            "ports": {
                "rotation": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                },
                "scale": 0.0750000029802322,
                "translation": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                }
            },
            "type": "anim/animation/transform"
        }
    },
    "scene_config": {
        "end_time": 5.0,
        "fps": 24.0,
        "start_time": 0.0
    },
    "ui_geometry": "AdnQywADAAAAAAAAAAAAAAAAB38AAAQTAAAAAAAAABkAAAQ6AAACWQAAAAACAAAAB4AAAAAAAAAAGAAAB38AAAQT",
    "ui_state": "AAAA/wAAAAD9AAAAAgAAAAAAAAKRAAADbPwCAAAAAfsAAAAKAGcAcgBhAHAAaAEAAAB1AAADbAAAAJgBAAADAAAAAQAAApMAAANs/AIAAAAC+wAAABQAcAByAG8AcABlAHIAdABpAGUAcwEAAAB1AAAA/wAAAHYBAAAD+wAAAAwAZQBkAGkAdABvAHIBAAABdQAAAmwAAACqAQAAAwAAAloAAANsAAAABAAAAAQAAAAIAAAACPwAAAAA"
}