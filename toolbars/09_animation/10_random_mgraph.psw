{
    "connections": [
        {
            "in_node": "transform_0",
            "in_port": "in_anim",
            "out_node": "bvh_0",
            "out_port": "anim"
        },
        {
            "in_node": "random_walk_0",
            "in_port": "motion_graph",
            "out_node": "create_0",
            "out_port": "motion_graph"
        },
        {
            "in_node": "random_walk_1",
            "in_port": "motion_graph",
            "out_node": "create_0",
            "out_port": "motion_graph"
        },
        {
            "in_node": "network_2",
            "in_port": "anim_frame",
            "out_node": "from_animation_0",
            "out_port": "frame"
        },
        {
            "in_node": "network_0",
            "in_port": "anim_frame",
            "out_node": "from_animation_1",
            "out_port": "frame"
        },
        {
            "in_node": "network_1",
            "in_port": "anim_frame",
            "out_node": "from_animation_2",
            "out_port": "frame"
        },
        {
            "in_node": "from_animation_2",
            "in_port": "animation",
            "out_node": "random_walk_0",
            "out_port": "out_anim"
        },
        {
            "in_node": "transform_2",
            "in_port": "in_anim",
            "out_node": "random_walk_1",
            "out_port": "out_anim"
        },
        {
            "in_node": "from_animation_0",
            "in_port": "time",
            "out_node": "time_0",
            "out_port": "time"
        },
        {
            "in_node": "from_animation_1",
            "in_port": "time",
            "out_node": "time_1",
            "out_port": "time"
        },
        {
            "in_node": "from_animation_2",
            "in_port": "time",
            "out_node": "time_2",
            "out_port": "time"
        },
        {
            "in_node": "y_project_0",
            "in_port": "in_anim",
            "out_node": "transform_0",
            "out_port": "out_anim"
        },
        {
            "in_node": "from_animation_0",
            "in_port": "animation",
            "out_node": "transform_1",
            "out_port": "out_anim"
        },
        {
            "in_node": "from_animation_1",
            "in_port": "animation",
            "out_node": "transform_2",
            "out_port": "out_anim"
        },
        {
            "in_node": "create_0",
            "in_port": "in_anim",
            "out_node": "y_project_0",
            "out_port": "out_anim"
        },
        {
            "in_node": "transform_1",
            "in_port": "in_anim",
            "out_node": "y_project_0",
            "out_port": "out_anim"
        }
    ],
    "description": "### Motion graph random walk\n\nA motion graph is a simple directional graph data structure describing possible transition points between a number of motion clips. Each transition is determined by comparing kinematic and dynamic properties of corresponding frames, which should lead to a transition that does not introduce any salient discontinuities or artifacts.\n\nA random walk through such a graph would generate a variation of the original motion(s) by adding random transitions.\n\nThis demo shows a random walk through a motion graph. In its current state, it does not attempt to synthesize smooth continuous transitions - it just switches between different clips. (todo: introduce smooth transitions)\n\n<sub>Kovar, Lucas, Michael Gleicher, and Frédéric Pighin. [\"Motion graphs.\"](https://graphics.cs.wisc.edu/Papers/2002/KGP02/mograph.pdf) ACM Transactions on Graphics (TOG). Vol. 21. No. 3. ACM, 2002.</sub>\n\n<sub>Kovar, Lucas, Michael Gleicher, and Frédéric Pighin. [\"Motion graphs.\"](http://graphics.cs.wisc.edu/Papers/2002/KGP02/mograph.pdf) ACM SIGGRAPH 2008 classes. ACM, 2008.</sub>",
    "nodes": {
        "bvh_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 428.556304931641,
                    "y": -666.361022949219
                }
            },
            "name": "bvh",
            "ports": {
                "filename": "$EXAMPLES/accad_mocap/Male2_Extended_1.bvh"
            },
            "type": "anim/loaders/bvh"
        },
        "create_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 274.291198730469,
                    "y": -57.0565452575684
                }
            },
            "name": "motiongraph",
            "ports": {
                "remove_self_transitions": 50,
                "transition_count": 100,
                "transition_length": 10
            },
            "type": "anim/animation/motiongraph/create"
        },
        "from_animation_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 654.040710449219,
                    "y": 145.781036376953
                }
            },
            "name": "from_animation",
            "type": "anim/frame/from_animation"
        },
        "from_animation_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 66.875602722168,
                    "y": 675.856628417969
                }
            },
            "name": "from_animation",
            "type": "anim/frame/from_animation"
        },
        "from_animation_2": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 381.094757080078,
                    "y": 375.151519775391
                }
            },
            "name": "from_animation",
            "type": "anim/frame/from_animation"
        },
        "network_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 180.546447753906,
                    "y": 849.589050292969
                }
            },
            "connections": [
                {
                    "in_node": "draw_0",
                    "in_port": "vertex_data",
                    "out_node": "anim_frame_0",
                    "out_port": "vertex_data"
                },
                {
                    "in_node": "draw_0",
                    "in_port": "uniforms",
                    "out_node": "float_0",
                    "out_port": "out_uniforms"
                },
                {
                    "in_node": "program_0",
                    "in_port": "fragment_shader",
                    "out_node": "fragment_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "program_0",
                    "in_port": "geometry_shader",
                    "out_node": "geometry_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "vec3_0",
                    "in_port": "value",
                    "out_node": "input_0",
                    "out_port": "data"
                },
                {
                    "in_node": "float_0",
                    "in_port": "value",
                    "out_node": "input_1",
                    "out_port": "data"
                },
                {
                    "in_node": "anim_frame_0",
                    "in_port": "frame",
                    "out_node": "input_2",
                    "out_port": "data"
                },
                {
                    "in_node": "draw_0",
                    "in_port": "program",
                    "out_node": "program_0",
                    "out_port": "program"
                },
                {
                    "in_node": "float_0",
                    "in_port": "in_uniforms",
                    "out_node": "vec3_0",
                    "out_port": "out_uniforms"
                },
                {
                    "in_node": "program_0",
                    "in_port": "vertex_shader",
                    "out_node": "vertex_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "vec3_0",
                    "in_port": "in_uniforms",
                    "out_node": "viewport_0",
                    "out_port": "out_uniforms"
                }
            ],
            "name": "skeleton",
            "nodes": {
                "anim_frame_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 428.075958251953,
                            "y": 711.054016113281
                        }
                    },
                    "name": "anim_frame",
                    "type": "render/vertex_data/anim_frame"
                },
                "draw_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 741.257934570312,
                            "y": 544.379211425781
                        }
                    },
                    "name": "draw",
                    "type": "render/draw"
                },
                "float_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 739.986572265625,
                            "y": 336.014221191406
                        }
                    },
                    "name": "float",
                    "ports": {
                        "name": "width"
                    },
                    "type": "render/uniforms/float"
                },
                "fragment_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 323.437377929688,
                            "y": 560.594970703125
                        }
                    },
                    "name": "fragment_shader",
                    "ports": {
                        "source": "#version 130 \n \nout vec4 color; \n \nin vec3 normal; \n\nuniform vec3 material;\n \nvoid main() { \n\tvec3 norm = normalize(normal);\n\n\tfloat val = abs(norm.z);\n\tcolor = vec4(vec3(val)*material, 1); \n\t//color = vec4(1,1,1,1);\n} \n"
                    },
                    "type": "render/fragment_shader"
                },
                "geometry_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 329.1552734375,
                            "y": 434.355621337891
                        }
                    },
                    "name": "geometry_shader",
                    "ports": {
                        "source": "#version 440\n\n#define SUBDIV 10\n\nuniform mat4 iProjection;\nuniform mat4 iModelView;\nuniform mat4 iModelViewNormal;\nuniform vec2 iResolution;\n\nuniform float width;\n\nlayout(lines) in;\nlayout(triangle_strip, max_vertices = (SUBDIV+1)*13) out;\n\nout vec3 normal;\n\nvec4 project(vec3 p, vec3 offset) {\n\treturn iProjection * iModelView * (vec4(p,1) + vec4(offset, 0)); \n}\n\nvec3 nproject(vec3 n) {\n\treturn (iModelViewNormal * vec4(n,1)).xyz; \n}\n\nvoid hemisphere(vec3 p1, vec3 dir, vec3 norm, vec3 binorm) {\n\tfor(int a=0;a<SUBDIV;++a) {\n\t\tnormal = nproject(dir);\n\t\tgl_Position = project(p1, dir);\n\t\tEmitVertex();\n\n\t\tfloat angle1 = float(a) / float(SUBDIV) * 3.1415 * 2.0;\n\t\tvec3 offset1 = norm*cos(angle1) + binorm*sin(angle1);\n\n\t\tfloat angle2 = float(a+1) / float(SUBDIV) * 3.1415 * 2.0;\n\t\tvec3 offset2 = norm*cos(angle2) + binorm*sin(angle2);\n\n\t\tfor(int b=1;b<=SUBDIV/4;++b) {\n\t\t\tfloat vangle = float(b) / float(SUBDIV/4) * 3.1415 / 2.0;\n\t\t\tfloat c = cos(vangle);\n\t\t\tfloat s = sin(vangle);\n\n\t\t\tvec3 o1 = c*dir + s*offset1;\n\t\t\tvec3 o2 = c*dir + s*offset2;\n\n\t\t\tnormal = nproject(o1);\n\t\t\tgl_Position = project(p1, o1);\n\t\t\tEmitVertex();\n\n\t\t\tnormal = nproject(o2);\n\t\t\tgl_Position = project(p1, o2);\n\t\t\tEmitVertex();\n\t\t}\n\t\tEndPrimitive();\n\t}\n}\n\nvoid doEmitLine(vec3 p1, vec3 p2) {\n\t// orthonormal basis to work with\n\tvec3 dir = p2-p1;\n\tdir = normalize(dir) * width;\n\n\tvec3 norm = vec3(dir.y-dir.z, dir.z-dir.x, dir.x-dir.y);\n\tnorm = normalize(norm) * width;\n\n\tvec3 binorm = cross(norm, dir);\n\tbinorm = normalize(binorm) * width;\n\n\t// cylinder\n\tfor(int a=0;a<=SUBDIV;++a) {\n\t\tfloat angle = float(a) / float(SUBDIV) * 3.1415 * 2.0;\n\t\tvec3 offset = norm*cos(angle) + binorm*sin(angle);\n\t\t\n\t\tnormal = nproject(offset);\n\t\tgl_Position = project(p1, offset);\n\t\tEmitVertex(); \n\t\tgl_Position = project(p2, offset);\n\t\tEmitVertex(); \n\t}\n\tEndPrimitive(); \n\n\t// hemispheres at the end\n\themisphere(p1, -dir, norm, binorm);\n\t// hemisphere(p2, dir, -norm, -binorm); // no need for a hemisphere at the front - never visible\n}\n\n\nvoid main() { \n\tfor(int i = 0; i < gl_in.length(); i+=2) { \n\t\t// each \"line\" is emitted as a triangle strip\n\t\tdoEmitLine(\n\t\t\tgl_in[i].gl_Position.xyz,\n\t\t\tgl_in[(i+1) % gl_in.length()].gl_Position.xyz\n\t\t);\n\t} \n} "
                    },
                    "type": "render/geometry_shader"
                },
                "input_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 563.533630371094,
                            "y": 229.284225463867
                        }
                    },
                    "name": "color",
                    "type": "input"
                },
                "input_1": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 557.374816894531,
                            "y": 348.355743408203
                        }
                    },
                    "name": "width",
                    "type": "input"
                },
                "input_2": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 282.278503417969,
                            "y": 724.046875
                        }
                    },
                    "name": "anim_frame",
                    "type": "input"
                },
                "program_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 530.351745605469,
                            "y": 480.039581298828
                        }
                    },
                    "name": "program",
                    "type": "render/program"
                },
                "vec3_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 745.4375,
                            "y": 169.73274230957
                        }
                    },
                    "name": "vec3",
                    "ports": {
                        "name": "material"
                    },
                    "type": "render/uniforms/vec3"
                },
                "vertex_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 353.27490234375,
                            "y": 315.953887939453
                        }
                    },
                    "name": "vertex_shader",
                    "ports": {
                        "source": "#version 130 \n\nin vec3 P;\n\nvoid main() {\n   \tgl_Position = vec4(P, 1);\n} "
                    },
                    "type": "render/vertex_shader"
                },
                "viewport_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 750.423278808594,
                            "y": 51.6120452880859
                        }
                    },
                    "name": "viewport",
                    "type": "render/uniforms/viewport"
                }
            },
            "ports": {
                "color": {
                    "x": 1.0,
                    "y": 0.0,
                    "z": 0.0
                },
                "width": 0.0199999995529652
            },
            "type": "network"
        },
        "network_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 464.948699951172,
                    "y": 593.888000488281
                }
            },
            "connections": [
                {
                    "in_node": "draw_0",
                    "in_port": "vertex_data",
                    "out_node": "anim_frame_0",
                    "out_port": "vertex_data"
                },
                {
                    "in_node": "draw_0",
                    "in_port": "uniforms",
                    "out_node": "float_0",
                    "out_port": "out_uniforms"
                },
                {
                    "in_node": "program_0",
                    "in_port": "fragment_shader",
                    "out_node": "fragment_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "program_0",
                    "in_port": "geometry_shader",
                    "out_node": "geometry_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "vec3_0",
                    "in_port": "value",
                    "out_node": "input_0",
                    "out_port": "data"
                },
                {
                    "in_node": "float_0",
                    "in_port": "value",
                    "out_node": "input_1",
                    "out_port": "data"
                },
                {
                    "in_node": "anim_frame_0",
                    "in_port": "frame",
                    "out_node": "input_2",
                    "out_port": "data"
                },
                {
                    "in_node": "draw_0",
                    "in_port": "program",
                    "out_node": "program_0",
                    "out_port": "program"
                },
                {
                    "in_node": "float_0",
                    "in_port": "in_uniforms",
                    "out_node": "vec3_0",
                    "out_port": "out_uniforms"
                },
                {
                    "in_node": "program_0",
                    "in_port": "vertex_shader",
                    "out_node": "vertex_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "vec3_0",
                    "in_port": "in_uniforms",
                    "out_node": "viewport_0",
                    "out_port": "out_uniforms"
                }
            ],
            "name": "skeleton",
            "nodes": {
                "anim_frame_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 428.075958251953,
                            "y": 711.054016113281
                        }
                    },
                    "name": "anim_frame",
                    "type": "render/vertex_data/anim_frame"
                },
                "draw_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 741.257934570312,
                            "y": 544.379211425781
                        }
                    },
                    "name": "draw",
                    "type": "render/draw"
                },
                "float_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 739.986572265625,
                            "y": 336.014221191406
                        }
                    },
                    "name": "float",
                    "ports": {
                        "name": "width"
                    },
                    "type": "render/uniforms/float"
                },
                "fragment_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 323.437377929688,
                            "y": 560.594970703125
                        }
                    },
                    "name": "fragment_shader",
                    "ports": {
                        "source": "#version 130 \n \nout vec4 color; \n \nin vec3 normal; \n\nuniform vec3 material;\n \nvoid main() { \n\tvec3 norm = normalize(normal);\n\n\tfloat val = abs(norm.z);\n\tcolor = vec4(vec3(val)*material, 1); \n\t//color = vec4(1,1,1,1);\n} \n"
                    },
                    "type": "render/fragment_shader"
                },
                "geometry_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 329.1552734375,
                            "y": 434.355621337891
                        }
                    },
                    "name": "geometry_shader",
                    "ports": {
                        "source": "#version 440\n\n#define SUBDIV 10\n\nuniform mat4 iProjection;\nuniform mat4 iModelView;\nuniform mat4 iModelViewNormal;\nuniform vec2 iResolution;\n\nuniform float width;\n\nlayout(lines) in;\nlayout(triangle_strip, max_vertices = (SUBDIV+1)*13) out;\n\nout vec3 normal;\n\nvec4 project(vec3 p, vec3 offset) {\n\treturn iProjection * iModelView * (vec4(p,1) + vec4(offset, 0)); \n}\n\nvec3 nproject(vec3 n) {\n\treturn (iModelViewNormal * vec4(n,1)).xyz; \n}\n\nvoid hemisphere(vec3 p1, vec3 dir, vec3 norm, vec3 binorm) {\n\tfor(int a=0;a<SUBDIV;++a) {\n\t\tnormal = nproject(dir);\n\t\tgl_Position = project(p1, dir);\n\t\tEmitVertex();\n\n\t\tfloat angle1 = float(a) / float(SUBDIV) * 3.1415 * 2.0;\n\t\tvec3 offset1 = norm*cos(angle1) + binorm*sin(angle1);\n\n\t\tfloat angle2 = float(a+1) / float(SUBDIV) * 3.1415 * 2.0;\n\t\tvec3 offset2 = norm*cos(angle2) + binorm*sin(angle2);\n\n\t\tfor(int b=1;b<=SUBDIV/4;++b) {\n\t\t\tfloat vangle = float(b) / float(SUBDIV/4) * 3.1415 / 2.0;\n\t\t\tfloat c = cos(vangle);\n\t\t\tfloat s = sin(vangle);\n\n\t\t\tvec3 o1 = c*dir + s*offset1;\n\t\t\tvec3 o2 = c*dir + s*offset2;\n\n\t\t\tnormal = nproject(o1);\n\t\t\tgl_Position = project(p1, o1);\n\t\t\tEmitVertex();\n\n\t\t\tnormal = nproject(o2);\n\t\t\tgl_Position = project(p1, o2);\n\t\t\tEmitVertex();\n\t\t}\n\t\tEndPrimitive();\n\t}\n}\n\nvoid doEmitLine(vec3 p1, vec3 p2) {\n\t// orthonormal basis to work with\n\tvec3 dir = p2-p1;\n\tdir = normalize(dir) * width;\n\n\tvec3 norm = vec3(dir.y-dir.z, dir.z-dir.x, dir.x-dir.y);\n\tnorm = normalize(norm) * width;\n\n\tvec3 binorm = cross(norm, dir);\n\tbinorm = normalize(binorm) * width;\n\n\t// cylinder\n\tfor(int a=0;a<=SUBDIV;++a) {\n\t\tfloat angle = float(a) / float(SUBDIV) * 3.1415 * 2.0;\n\t\tvec3 offset = norm*cos(angle) + binorm*sin(angle);\n\t\t\n\t\tnormal = nproject(offset);\n\t\tgl_Position = project(p1, offset);\n\t\tEmitVertex(); \n\t\tgl_Position = project(p2, offset);\n\t\tEmitVertex(); \n\t}\n\tEndPrimitive(); \n\n\t// hemispheres at the end\n\themisphere(p1, -dir, norm, binorm);\n\t// hemisphere(p2, dir, -norm, -binorm); // no need for a hemisphere at the front - never visible\n}\n\n\nvoid main() { \n\tfor(int i = 0; i < gl_in.length(); i+=2) { \n\t\t// each \"line\" is emitted as a triangle strip\n\t\tdoEmitLine(\n\t\t\tgl_in[i].gl_Position.xyz,\n\t\t\tgl_in[(i+1) % gl_in.length()].gl_Position.xyz\n\t\t);\n\t} \n} "
                    },
                    "type": "render/geometry_shader"
                },
                "input_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 563.533630371094,
                            "y": 229.284225463867
                        }
                    },
                    "name": "color",
                    "type": "input"
                },
                "input_1": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 557.374816894531,
                            "y": 348.355743408203
                        }
                    },
                    "name": "width",
                    "type": "input"
                },
                "input_2": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 282.278503417969,
                            "y": 724.046875
                        }
                    },
                    "name": "anim_frame",
                    "type": "input"
                },
                "program_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 530.351745605469,
                            "y": 480.039581298828
                        }
                    },
                    "name": "program",
                    "type": "render/program"
                },
                "vec3_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 745.4375,
                            "y": 169.73274230957
                        }
                    },
                    "name": "vec3",
                    "ports": {
                        "name": "material"
                    },
                    "type": "render/uniforms/vec3"
                },
                "vertex_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 353.27490234375,
                            "y": 315.953887939453
                        }
                    },
                    "name": "vertex_shader",
                    "ports": {
                        "source": "#version 130 \n\nin vec3 P;\n\nvoid main() {\n   \tgl_Position = vec4(P, 1);\n} "
                    },
                    "type": "render/vertex_shader"
                },
                "viewport_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 750.423278808594,
                            "y": 51.6120452880859
                        }
                    },
                    "name": "viewport",
                    "type": "render/uniforms/viewport"
                }
            },
            "ports": {
                "color": {
                    "x": 0.0,
                    "y": 1.0,
                    "z": 0.0
                },
                "width": 0.0199999995529652
            },
            "type": "network"
        },
        "network_2": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 753.104614257812,
                    "y": 340.039642333984
                }
            },
            "connections": [
                {
                    "in_node": "draw_0",
                    "in_port": "vertex_data",
                    "out_node": "anim_frame_0",
                    "out_port": "vertex_data"
                },
                {
                    "in_node": "draw_0",
                    "in_port": "uniforms",
                    "out_node": "float_0",
                    "out_port": "out_uniforms"
                },
                {
                    "in_node": "program_0",
                    "in_port": "fragment_shader",
                    "out_node": "fragment_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "program_0",
                    "in_port": "geometry_shader",
                    "out_node": "geometry_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "vec3_0",
                    "in_port": "value",
                    "out_node": "input_0",
                    "out_port": "data"
                },
                {
                    "in_node": "float_0",
                    "in_port": "value",
                    "out_node": "input_1",
                    "out_port": "data"
                },
                {
                    "in_node": "anim_frame_0",
                    "in_port": "frame",
                    "out_node": "input_2",
                    "out_port": "data"
                },
                {
                    "in_node": "draw_0",
                    "in_port": "program",
                    "out_node": "program_0",
                    "out_port": "program"
                },
                {
                    "in_node": "float_0",
                    "in_port": "in_uniforms",
                    "out_node": "vec3_0",
                    "out_port": "out_uniforms"
                },
                {
                    "in_node": "program_0",
                    "in_port": "vertex_shader",
                    "out_node": "vertex_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "vec3_0",
                    "in_port": "in_uniforms",
                    "out_node": "viewport_0",
                    "out_port": "out_uniforms"
                }
            ],
            "name": "skeleton",
            "nodes": {
                "anim_frame_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 428.075958251953,
                            "y": 711.054016113281
                        }
                    },
                    "name": "anim_frame",
                    "type": "render/vertex_data/anim_frame"
                },
                "draw_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 741.257934570312,
                            "y": 544.379211425781
                        }
                    },
                    "name": "draw",
                    "type": "render/draw"
                },
                "float_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 739.986572265625,
                            "y": 336.014221191406
                        }
                    },
                    "name": "float",
                    "ports": {
                        "name": "width"
                    },
                    "type": "render/uniforms/float"
                },
                "fragment_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 323.437377929688,
                            "y": 560.594970703125
                        }
                    },
                    "name": "fragment_shader",
                    "ports": {
                        "source": "#version 130 \n \nout vec4 color; \n \nin vec3 normal; \n\nuniform vec3 material;\n \nvoid main() { \n\tvec3 norm = normalize(normal);\n\n\tfloat val = abs(norm.z);\n\tcolor = vec4(vec3(val)*material, 1); \n\t//color = vec4(1,1,1,1);\n} \n"
                    },
                    "type": "render/fragment_shader"
                },
                "geometry_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 329.1552734375,
                            "y": 434.355621337891
                        }
                    },
                    "name": "geometry_shader",
                    "ports": {
                        "source": "#version 440\n\n#define SUBDIV 10\n\nuniform mat4 iProjection;\nuniform mat4 iModelView;\nuniform mat4 iModelViewNormal;\nuniform vec2 iResolution;\n\nuniform float width;\n\nlayout(lines) in;\nlayout(triangle_strip, max_vertices = (SUBDIV+1)*13) out;\n\nout vec3 normal;\n\nvec4 project(vec3 p, vec3 offset) {\n\treturn iProjection * iModelView * (vec4(p,1) + vec4(offset, 0)); \n}\n\nvec3 nproject(vec3 n) {\n\treturn (iModelViewNormal * vec4(n,1)).xyz; \n}\n\nvoid hemisphere(vec3 p1, vec3 dir, vec3 norm, vec3 binorm) {\n\tfor(int a=0;a<SUBDIV;++a) {\n\t\tnormal = nproject(dir);\n\t\tgl_Position = project(p1, dir);\n\t\tEmitVertex();\n\n\t\tfloat angle1 = float(a) / float(SUBDIV) * 3.1415 * 2.0;\n\t\tvec3 offset1 = norm*cos(angle1) + binorm*sin(angle1);\n\n\t\tfloat angle2 = float(a+1) / float(SUBDIV) * 3.1415 * 2.0;\n\t\tvec3 offset2 = norm*cos(angle2) + binorm*sin(angle2);\n\n\t\tfor(int b=1;b<=SUBDIV/4;++b) {\n\t\t\tfloat vangle = float(b) / float(SUBDIV/4) * 3.1415 / 2.0;\n\t\t\tfloat c = cos(vangle);\n\t\t\tfloat s = sin(vangle);\n\n\t\t\tvec3 o1 = c*dir + s*offset1;\n\t\t\tvec3 o2 = c*dir + s*offset2;\n\n\t\t\tnormal = nproject(o1);\n\t\t\tgl_Position = project(p1, o1);\n\t\t\tEmitVertex();\n\n\t\t\tnormal = nproject(o2);\n\t\t\tgl_Position = project(p1, o2);\n\t\t\tEmitVertex();\n\t\t}\n\t\tEndPrimitive();\n\t}\n}\n\nvoid doEmitLine(vec3 p1, vec3 p2) {\n\t// orthonormal basis to work with\n\tvec3 dir = p2-p1;\n\tdir = normalize(dir) * width;\n\n\tvec3 norm = vec3(dir.y-dir.z, dir.z-dir.x, dir.x-dir.y);\n\tnorm = normalize(norm) * width;\n\n\tvec3 binorm = cross(norm, dir);\n\tbinorm = normalize(binorm) * width;\n\n\t// cylinder\n\tfor(int a=0;a<=SUBDIV;++a) {\n\t\tfloat angle = float(a) / float(SUBDIV) * 3.1415 * 2.0;\n\t\tvec3 offset = norm*cos(angle) + binorm*sin(angle);\n\t\t\n\t\tnormal = nproject(offset);\n\t\tgl_Position = project(p1, offset);\n\t\tEmitVertex(); \n\t\tgl_Position = project(p2, offset);\n\t\tEmitVertex(); \n\t}\n\tEndPrimitive(); \n\n\t// hemispheres at the end\n\themisphere(p1, -dir, norm, binorm);\n\t// hemisphere(p2, dir, -norm, -binorm); // no need for a hemisphere at the front - never visible\n}\n\n\nvoid main() { \n\tfor(int i = 0; i < gl_in.length(); i+=2) { \n\t\t// each \"line\" is emitted as a triangle strip\n\t\tdoEmitLine(\n\t\t\tgl_in[i].gl_Position.xyz,\n\t\t\tgl_in[(i+1) % gl_in.length()].gl_Position.xyz\n\t\t);\n\t} \n} "
                    },
                    "type": "render/geometry_shader"
                },
                "input_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 563.533630371094,
                            "y": 229.284225463867
                        }
                    },
                    "name": "color",
                    "type": "input"
                },
                "input_1": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 557.374816894531,
                            "y": 348.355743408203
                        }
                    },
                    "name": "width",
                    "type": "input"
                },
                "input_2": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 282.278503417969,
                            "y": 724.046875
                        }
                    },
                    "name": "anim_frame",
                    "type": "input"
                },
                "program_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 530.351745605469,
                            "y": 480.039581298828
                        }
                    },
                    "name": "program",
                    "type": "render/program"
                },
                "vec3_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 745.4375,
                            "y": 169.73274230957
                        }
                    },
                    "name": "vec3",
                    "ports": {
                        "name": "material"
                    },
                    "type": "render/uniforms/vec3"
                },
                "vertex_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 353.27490234375,
                            "y": 315.953887939453
                        }
                    },
                    "name": "vertex_shader",
                    "ports": {
                        "source": "#version 130 \n\nin vec3 P;\n\nvoid main() {\n   \tgl_Position = vec4(P, 1);\n} "
                    },
                    "type": "render/vertex_shader"
                },
                "viewport_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 750.423278808594,
                            "y": 51.6120452880859
                        }
                    },
                    "name": "viewport",
                    "type": "render/uniforms/viewport"
                }
            },
            "ports": {
                "color": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 1.0
                },
                "width": 0.0199999995529652
            },
            "type": "network"
        },
        "random_walk_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 285.800476074219,
                    "y": 145.017547607422
                }
            },
            "name": "random_walk",
            "ports": {
                "random_seed": 9813,
                "target_length": 1000,
                "transition_probability": 0.5
            },
            "type": "anim/animation/motiongraph/random_walk"
        },
        "random_walk_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 58.0430221557617,
                    "y": 156.324676513672
                }
            },
            "name": "random_walk",
            "ports": {
                "random_seed": 42345,
                "target_length": 1000,
                "transition_probability": 0.5
            },
            "type": "anim/animation/motiongraph/random_walk"
        },
        "time_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 561.676147460938,
                    "y": 168.675201416016
                }
            },
            "name": "time",
            "type": "time"
        },
        "time_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -25.4888973236084,
                    "y": 698.750793457031
                }
            },
            "name": "time",
            "type": "time"
        },
        "time_2": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 288.730224609375,
                    "y": 398.045684814453
                }
            },
            "name": "time",
            "type": "time"
        },
        "transform_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 468.773712158203,
                    "y": -494.044830322266
                }
            },
            "name": "transform",
            "ports": {
                "rotation": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                },
                "scale": 0.00999999977648258,
                "translation": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                }
            },
            "type": "anim/animation/transform"
        },
        "transform_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 649.082702636719,
                    "y": -34.7265281677246
                }
            },
            "name": "transform",
            "ports": {
                "rotation": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                },
                "scale": 1.0,
                "translation": {
                    "x": -1.0,
                    "y": 0.0,
                    "z": 0.0
                }
            },
            "type": "anim/animation/transform"
        },
        "transform_2": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 87.3086471557617,
                    "y": 452.460113525391
                }
            },
            "name": "transform",
            "ports": {
                "rotation": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                },
                "scale": 1.0,
                "translation": {
                    "x": 1.0,
                    "y": 0.0,
                    "z": 0.0
                }
            },
            "type": "anim/animation/transform"
        },
        "y_project_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 487.267486572266,
                    "y": -253.502227783203
                }
            },
            "name": "y_project",
            "ports": {
                "ground_level": 0.0
            },
            "type": "anim/animation/trajectory/y_project"
        }
    },
    "scene_config": {
        "end_time": 20.0,
        "fps": 24.0,
        "start_time": 0.0
    },
    "ui_geometry": "AdnQywADAAAAAAAAAAAAAAAAB38AAAQTAAAAAAAAABwAAASlAAACXQAAAAACAAAAB4AAAAAAAAAAGAAAB38AAAQT",
    "ui_state": "AAAA/wAAAAD9AAAAAgAAAAAAAAL8AAADbPwCAAAAAfsAAAAKAGcAcgBhAHAAaAEAAAB1AAADbAAAAJgBAAADAAAAAQAAAagAAANs/AIAAAAC+wAAABQAcAByAG8AcABlAHIAdABpAGUAcwEAAAB1AAABOwAAAHYBAAAD+wAAAAwAZQBkAGkAdABvAHIBAAABsQAAAjAAAACqAQAAAwAAAtoAAANsAAAABAAAAAQAAAAIAAAACPwAAAAA"
}