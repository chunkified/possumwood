{
    "connections": [
        {
            "in_node": "threshold_0",
            "in_port": "in_frame",
            "out_node": "convert_0",
            "out_port": "out_sequence"
        },
        {
            "in_node": "demosaic_0",
            "in_port": "in_frame",
            "out_node": "convert_1",
            "out_port": "out_frame"
        },
        {
            "in_node": "divide_0",
            "in_port": "in_frame_1",
            "out_node": "convert_2",
            "out_port": "out_frame"
        },
        {
            "in_node": "demosaic_1",
            "in_port": "in_frame",
            "out_node": "convert_3",
            "out_port": "out_frame"
        },
        {
            "in_node": "divide_0",
            "in_port": "in_frame_2",
            "out_node": "convert_4",
            "out_port": "out_frame"
        },
        {
            "in_node": "convert_2",
            "in_port": "in_frame",
            "out_node": "demosaic_0",
            "out_port": "out_frame"
        },
        {
            "in_node": "convert_4",
            "in_port": "in_frame",
            "out_node": "demosaic_1",
            "out_port": "out_frame"
        },
        {
            "in_node": "samples_from_metadata_0",
            "in_port": "in_frame",
            "out_node": "divide_0",
            "out_port": "out_frame"
        },
        {
            "in_node": "network_0",
            "in_port": "input",
            "out_node": "float_0",
            "out_port": "out_uniforms"
        },
        {
            "in_node": "float_1",
            "in_port": "in_uniforms",
            "out_node": "float_0",
            "out_port": "out_uniforms"
        },
        {
            "in_node": "network_1",
            "in_port": "input",
            "out_node": "float_1",
            "out_port": "out_uniforms"
        },
        {
            "in_node": "subset_0",
            "in_port": "in_seq",
            "out_node": "inpaint_0",
            "out_port": "out_Sequence"
        },
        {
            "in_node": "interval_0",
            "in_port": "interval",
            "out_node": "input_0",
            "out_port": "data"
        },
        {
            "in_node": "interval_1",
            "in_port": "interval",
            "out_node": "input_1",
            "out_port": "data"
        },
        {
            "in_node": "inpaint_0",
            "in_port": "Sequence",
            "out_node": "integrate_mosaic_0",
            "out_port": "sequence"
        },
        {
            "in_node": "convert_0",
            "in_port": "in_sequence",
            "out_node": "integrate_mosaic_0",
            "out_port": "sample_count"
        },
        {
            "in_node": "float_0",
            "in_port": "value",
            "out_node": "interval_0",
            "out_port": "out"
        },
        {
            "in_node": "float_1",
            "in_port": "value",
            "out_node": "interval_1",
            "out_port": "out"
        },
        {
            "in_node": "convert_1",
            "in_port": "in_frame",
            "out_node": "lytro_lightfield_0",
            "out_port": "frame"
        },
        {
            "in_node": "convert_3",
            "in_port": "in_frame",
            "out_node": "lytro_lightfield_1",
            "out_port": "frame"
        },
        {
            "in_node": "samples_from_metadata_0",
            "in_port": "metadata",
            "out_node": "lytro_lightfield_1",
            "out_port": "metadata"
        },
        {
            "in_node": "split_vec2u_0",
            "in_port": "vec",
            "out_node": "metadata_0",
            "out_port": "size"
        },
        {
            "in_node": "unsigned_0",
            "in_port": "in_uniforms",
            "out_node": "opencv_texture_sequence_0",
            "out_port": "out_uniforms"
        },
        {
            "in_node": "samples_refocus_0",
            "in_port": "in_samples",
            "out_node": "samples_from_metadata_0",
            "out_port": "samples"
        },
        {
            "in_node": "integrate_mosaic_0",
            "in_port": "samples",
            "out_node": "samples_refocus_0",
            "out_port": "out_samples"
        },
        {
            "in_node": "unsigned_0",
            "in_port": "value",
            "out_node": "split_vec2u_0",
            "out_port": "x"
        },
        {
            "in_node": "unsigned_1",
            "in_port": "value",
            "out_node": "split_vec2u_0",
            "out_port": "y"
        },
        {
            "in_node": "inpaint_0",
            "in_port": "mask",
            "out_node": "threshold_0",
            "out_port": "out_frame"
        },
        {
            "in_node": "unsigned_1",
            "in_port": "in_uniforms",
            "out_node": "unsigned_0",
            "out_port": "out_uniforms"
        },
        {
            "in_node": "viewport_0",
            "in_port": "in_uniforms",
            "out_node": "unsigned_1",
            "out_port": "out_uniforms"
        },
        {
            "in_node": "float_0",
            "in_port": "in_uniforms",
            "out_node": "viewport_0",
            "out_port": "out_uniforms"
        },
        {
            "in_node": "convert_5",
            "in_port": "in_sequence",
            "out_node": "subset_0",
            "out_port": "out_seq"
        },
        {
            "in_node": "metadata_0",
            "in_port": "sequence",
            "out_node": "convert_5",
            "out_port": "out_sequence"
        },
        {
            "in_node": "opencv_texture_sequence_0",
            "in_port": "sequence",
            "out_node": "convert_5",
            "out_port": "out_sequence"
        }
    ],
    "description": "### 2D+1D Lightfields Visualisation\n\nA simple lighfield slicing example (2D image synthesis) from an image sequence captured using a Raspberry Pi camera and a linear rail,, creating a simple 3D lightfield (2D pixel position + horizontal image index). \n\nUsing OpenGL, this demo visualises the \"base\" integration and the corresponding slice in Y-U (spatial Y and image index) - each row of the integral image is a sum over all rows of the slice image. Changing refocus parameter interactively visualises the corresponding slice.",
    "name": "network",
    "nodes": {
        "convert_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1400.79113769531,
                    "y": 1434.11047363281
                }
            },
            "name": "convert",
            "ports": {
                "a": 255.0,
                "b": 0.0,
                "mode": "CV_8U"
            },
            "type": "opencv/sequence/convert"
        },
        "convert_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1712.44421386719,
                    "y": 76.2502288818359
                }
            },
            "name": "convert",
            "ports": {
                "a": 10000.0,
                "b": 0.0,
                "mode": "CV_16U"
            },
            "type": "opencv/convert"
        },
        "convert_2": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1693.06066894531,
                    "y": 441.308197021484
                }
            },
            "name": "convert",
            "ports": {
                "a": 9.99999974737875e-05,
                "b": 0.0,
                "mode": "CV_32F"
            },
            "type": "opencv/convert"
        },
        "convert_3": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1555.13330078125,
                    "y": 76.7463226318359
                }
            },
            "name": "convert",
            "ports": {
                "a": 10000.0,
                "b": 0.0,
                "mode": "CV_16U"
            },
            "type": "opencv/convert"
        },
        "convert_4": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1535.74975585938,
                    "y": 441.804229736328
                }
            },
            "name": "convert",
            "ports": {
                "a": 9.99999974737875e-05,
                "b": 0.0,
                "mode": "CV_32F"
            },
            "type": "opencv/convert"
        },
        "convert_5": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -714.998718261719,
                    "y": 1363.88037109375
                }
            },
            "name": "convert",
            "ports": {
                "a": 255.0,
                "b": 0.0,
                "mode": "CV_8U"
            },
            "type": "opencv/sequence/convert"
        },
        "demosaic_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1707.59838867188,
                    "y": 292.700408935547
                }
            },
            "name": "demosaic",
            "ports": {
                "mode": "BayerRG2BGR_EA"
            },
            "type": "opencv/demosaic"
        },
        "demosaic_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1550.28747558594,
                    "y": 293.196502685547
                }
            },
            "name": "demosaic",
            "ports": {
                "mode": "BayerRG2BGR_EA"
            },
            "type": "opencv/demosaic"
        },
        "divide_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1676.33190917969,
                    "y": 637.139587402344
                }
            },
            "name": "divide",
            "ports": {
                "scale": 0.200000002980232
            },
            "type": "opencv/maths/divide"
        },
        "float_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 454.907836914062,
                    "y": 1039.63342285156
                }
            },
            "name": "float",
            "ports": {
                "name": "offset"
            },
            "type": "render/uniforms/float"
        },
        "float_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 357.045074462891,
                    "y": 1229.00415039062
                }
            },
            "name": "float",
            "ports": {
                "name": "x_position"
            },
            "type": "render/uniforms/float"
        },
        "inpaint_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1097.90319824219,
                    "y": 1455.50915527344
                }
            },
            "name": "inpaint",
            "ports": {
                "method": "INPAINT_NS",
                "radius": 5.0
            },
            "type": "opencv/sequence/inpaint"
        },
        "input_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 120.452178955078,
                    "y": 1068.28234863281
                }
            },
            "name": "refocus",
            "type": "input"
        },
        "input_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 4.79620456695557,
                    "y": 1237.31799316406
                }
            },
            "name": "x_position",
            "type": "input"
        },
        "integrate_mosaic_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1609.94189453125,
                    "y": 1228.72119140625
                }
            },
            "name": "integrate_mosaic",
            "ports": {
                "elements": 9,
                "inclusion_ratio": 0.5,
                "size": {
                    "x": 300,
                    "y": 300
                }
            },
            "type": "opencv/lightfields/integrate_mosaic"
        },
        "interval_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 234.489929199219,
                    "y": 1065.67895507812
                }
            },
            "name": "REFOCUS_VALUE",
            "type": "maths/interval"
        },
        "interval_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 160.775131225586,
                    "y": 1243.61120605469
                }
            },
            "name": "X_POSITION",
            "type": "maths/interval"
        },
        "lytro_lightfield_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1698.20434570312,
                    "y": -99.2854080200195
                }
            },
            "name": "lytro_lightfield",
            "ports": {
                "filename": "$EXAMPLES/lytro/road.lfr"
            },
            "type": "opencv/capture/lytro_lightfield"
        },
        "lytro_lightfield_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1469.4658203125,
                    "y": -69.578498840332
                }
            },
            "name": "lytro_lightfield",
            "ports": {
                "filename": "$EXAMPLES/lytro/calibration.lfr"
            },
            "type": "opencv/capture/lytro_lightfield"
        },
        "metadata_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 123.263679504395,
                    "y": 631.851684570312
                }
            },
            "name": "metadata",
            "type": "opencv/sequence/metadata"
        },
        "network_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 518.345581054688,
                    "y": 1286.54260253906
                }
            },
            "connections": [
                {
                    "in_node": "draw_0",
                    "in_port": "vertex_data",
                    "out_node": "cgal_0",
                    "out_port": "vertex_data"
                },
                {
                    "in_node": "program_0",
                    "in_port": "fragment_shader",
                    "out_node": "fragment_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "draw_0",
                    "in_port": "uniforms",
                    "out_node": "input_0",
                    "out_port": "data"
                },
                {
                    "in_node": "cgal_0",
                    "in_port": "mesh",
                    "out_node": "network_0",
                    "out_port": "mesh"
                },
                {
                    "in_node": "draw_0",
                    "in_port": "program",
                    "out_node": "program_0",
                    "out_port": "program"
                },
                {
                    "in_node": "program_0",
                    "in_port": "vertex_shader",
                    "out_node": "vertex_shader_0",
                    "out_port": "shader"
                }
            ],
            "name": "base_quad",
            "nodes": {
                "cgal_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 184.776275634766,
                            "y": 1637.96887207031
                        }
                    },
                    "name": "cgal",
                    "ports": {
                        "p_attr_name": "P"
                    },
                    "type": "render/vertex_data/cgal"
                },
                "draw_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 437.898864746094,
                            "y": 1283.29956054688
                        }
                    },
                    "name": "draw",
                    "ports": {
                        "setup": {
                            "culling": "ccw"
                        }
                    },
                    "type": "render/draw"
                },
                "fragment_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 12.5760974884033,
                            "y": 1295.697265625
                        }
                    },
                    "name": "fragment_shader",
                    "ports": {
                        "source": "#version 130 \n \nout vec4 color; \n \nin vec2 uv; \n\nuniform float offset;\nuniform sampler2DArray image;\nuniform uint image_count;\n\nuniform uint image_width;\nuniform uint image_height;\n\nvoid main() { \n\t// compute the aspect ratio from image width and height\n\tfloat aspect = float(image_width) / float(image_height);\n\n\tvec2 coords = uv;\n\n\tcoords.y -= 0.5;\n\tcoords.y *= aspect;\n\tcoords.y += 0.5;\n\n\n\tif(coords.y < 0.0 || coords.y > 1.0)\n\t\tcolor = vec4(0,0,0,1);\n\telse {\n\t\tcolor = vec4(0,0,0,1);\n\t\tfor(uint a=0u; a<image_count; ++a) {\n\t\t\tfloat uvx = 1.0-coords.x+(float(int(a)-int(image_count)/2))*0.001*offset;\n\t\t\tif(uvx >= 0.0 && uvx <= 1.0)\n\t\t\t\tcolor.rgb = color.rgb + vec4(texture(image, \n\t\t\t\t\tvec3(uvx, 1.0-coords.y, a)\n\t\t\t\t)).rgb; \n\t\t}\n\t\tcolor /= image_count;\n\t}\n} \n"
                    },
                    "type": "render/fragment_shader"
                },
                "input_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 395.701538085938,
                            "y": 1144.8916015625
                        }
                    },
                    "name": "input",
                    "type": "input"
                },
                "network_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 179.930374145508,
                            "y": 1431.21044921875
                        }
                    },
                    "name": "quad",
                    "ports": {
                        "axis/primary": {
                            "x": 1.0,
                            "y": 0.0,
                            "z": 0.0
                        },
                        "axis/secondary": {
                            "x": 0.0,
                            "y": 1.0,
                            "z": 0.0
                        },
                        "origin": {
                            "x": 9.34927868456725e-09,
                            "y": 4.58322688726718e-41,
                            "z": 8.65495621837908e-07
                        }
                    },
                    "source": "$NODES/cgal/primitives/quad.psw",
                    "type": "network"
                },
                "program_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 215.619338989258,
                            "y": 1181.6884765625
                        }
                    },
                    "name": "program",
                    "type": "render/program"
                },
                "vertex_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 38.4348106384277,
                            "y": 1080.45666503906
                        }
                    },
                    "name": "vertex_shader",
                    "ports": {
                        "source": "#version 130 \n \nin vec3 P;                     // position attr from the vbo \n \nuniform mat4 iProjection;      // projection matrix \nuniform mat4 iModelView;       // modelview matrix \n\nout vec2 uv;                   // uv texturing parameters\n \nvoid main() {\n\tvec3 pos = (P - 0.5) * 10.0;\n\n\tgl_Position = iProjection * iModelView* vec4(pos.x, 0.01, -pos.y, 1);\n\n\t// UV parameters are just untransformed world-space position\n\tuv = vec2(P);\n} \n"
                    },
                    "type": "render/vertex_shader"
                }
            },
            "type": "network"
        },
        "network_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 352.538848876953,
                    "y": 1425.73120117188
                }
            },
            "connections": [
                {
                    "in_node": "draw_0",
                    "in_port": "vertex_data",
                    "out_node": "cgal_0",
                    "out_port": "vertex_data"
                },
                {
                    "in_node": "program_0",
                    "in_port": "fragment_shader",
                    "out_node": "fragment_shader_0",
                    "out_port": "shader"
                },
                {
                    "in_node": "draw_0",
                    "in_port": "uniforms",
                    "out_node": "input_0",
                    "out_port": "data"
                },
                {
                    "in_node": "cgal_0",
                    "in_port": "mesh",
                    "out_node": "network_0",
                    "out_port": "mesh"
                },
                {
                    "in_node": "draw_0",
                    "in_port": "program",
                    "out_node": "program_0",
                    "out_port": "program"
                },
                {
                    "in_node": "program_0",
                    "in_port": "vertex_shader",
                    "out_node": "vertex_shader_0",
                    "out_port": "shader"
                }
            ],
            "name": "z_samples",
            "nodes": {
                "cgal_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 73.1480865478516,
                            "y": 2103.36450195312
                        }
                    },
                    "name": "cgal",
                    "ports": {
                        "p_attr_name": "P"
                    },
                    "type": "render/vertex_data/cgal"
                },
                "draw_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 326.270690917969,
                            "y": 1748.69506835938
                        }
                    },
                    "name": "draw",
                    "ports": {
                        "setup": {
                            "culling": "ccw"
                        }
                    },
                    "type": "render/draw"
                },
                "fragment_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": -97.7811508178711,
                            "y": 1758.55090332031
                        }
                    },
                    "name": "fragment_shader",
                    "ports": {
                        "source": "#version 130 \n \nout vec4 color; \n \nin vec2 uv; \n\nuniform float offset;\nuniform sampler2DArray image;\nuniform uint image_count;\n\nuniform uint image_width;\nuniform uint image_height;\n\nuniform float x_position;\n\nvoid main() { \n\t// compute the aspect ratio from image width and height\n\tfloat aspect = float(image_width) / float(image_height);\n\n\tvec2 coords = uv;\n\n\tif(coords.y < 0.0 || coords.y > 1.0)\n\t\tcolor = vec4(0,0,0,1);\n\telse {\n/*\t\tfor(uint a=0u; a<image_count; ++a) {\n\t\t\tfloat uvx = 1.0-coords.x+(float(int(a)-int(image_count)/2))*0.001*offset;\n\t\t\tif(uvx >= 0.0 && uvx <= 1.0)\n\t\t\t\tcolor.rgb = color.rgb + vec4(texture(image, \n\t\t\t\t\tvec3(uvx, 1.0-coords.y, a)\n\t\t\t\t)).rgb; \n\t\t}*/\n\n\t\tfloat uv_offs = 0.001*offset*floor((coords.y-0.5)*float(image_count));\n\t\tfloat uvx = 1.0-coords.x+uv_offs;\n\n\t\tif(uvx < 0.0 || uvx > 1.0)\n\t\t\tcolor = vec4(0,0,0,1);\n\t\telse\n\t\t\tcolor = texture(image, vec3(uvx, x_position, coords.y*float(image_count)-0.5));\n\t}\n} \n"
                    },
                    "type": "render/fragment_shader"
                },
                "input_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 286.943664550781,
                            "y": 1573.08764648438
                        }
                    },
                    "name": "input",
                    "type": "input"
                },
                "network_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 68.3021850585938,
                            "y": 1896.60595703125
                        }
                    },
                    "name": "quad",
                    "ports": {
                        "axis/primary": {
                            "x": 1.0,
                            "y": 0.0,
                            "z": 0.0
                        },
                        "axis/secondary": {
                            "x": 0.0,
                            "y": 1.0,
                            "z": 0.0
                        },
                        "origin": {
                            "x": 9.34927868456725e-09,
                            "y": 4.58322688726718e-41,
                            "z": 8.65495621837908e-07
                        }
                    },
                    "source": "$NODES/cgal/primitives/quad.psw",
                    "type": "network"
                },
                "program_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": 103.991149902344,
                            "y": 1647.083984375
                        }
                    },
                    "name": "program",
                    "type": "render/program"
                },
                "vertex_shader_0": {
                    "blind_data": {
                        "type": "possumwood::NodeData",
                        "value": {
                            "x": -73.1933822631836,
                            "y": 1545.85217285156
                        }
                    },
                    "name": "vertex_shader",
                    "ports": {
                        "source": "#version 130 \n \nin vec3 P;                     // position attr from the vbo \n \nuniform mat4 iProjection;      // projection matrix \nuniform mat4 iModelView;       // modelview matrix \n\nuniform float x_position;\n\nout vec2 uv;                   // uv texturing parameters\n\nuniform uint image_width;\nuniform uint image_height;\n \nvoid main() {\n\t// compute the aspect ratio from image width and height\n\tfloat aspect = float(image_width) / float(image_height);\n\n\tvec3 pos = (P - 0.5) * 10.0;\n\n\t//gl_Position = iProjection * iModelView* vec4((x_position - 0.5) * 10, P.x, -pos.y, 1);\n\tgl_Position = iProjection * iModelView* vec4(pos.x, P.y, (x_position-0.5)/aspect * 10, 1);\n\n\t// UV parameters are just untransformed world-space position\n\tuv = vec2(P);\n} \n"
                    },
                    "type": "render/vertex_shader"
                }
            },
            "type": "network"
        },
        "opencv_texture_sequence_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 400.359222412109,
                    "y": 275.082214355469
                }
            },
            "name": "opencv_texture_sequence",
            "ports": {
                "mode": "Linear",
                "name": "image"
            },
            "type": "render/uniforms/opencv_texture_sequence"
        },
        "samples_from_metadata_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1632.63000488281,
                    "y": 797.472900390625
                }
            },
            "name": "samples_from_metadata",
            "ports": {
                "scale_compensation": 0.998849987983704
            },
            "type": "opencv/lightfields/samples_from_metadata"
        },
        "samples_refocus_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1597.59204101562,
                    "y": 1000.65667724609
                }
            },
            "name": "samples_refocus",
            "ports": {
                "uv_offset": 0.0,
                "uv_threshold": 1.0,
                "xy_scale": 1.0
            },
            "type": "opencv/lightfields/samples_refocus"
        },
        "split_vec2u_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 283.108795166016,
                    "y": 632.515625
                }
            },
            "name": "split_vec2u",
            "type": "maths/split_vec2u"
        },
        "subset_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -858.164733886719,
                    "y": 1376.68334960938
                }
            },
            "name": "subset",
            "ports": {
                "range/x": {
                    "x": -20,
                    "y": 20
                },
                "range/y": {
                    "x": 0,
                    "y": 0
                }
            },
            "type": "opencv/sequence/subset"
        },
        "threshold_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": -1245.60998535156,
                    "y": 1506.45446777344
                }
            },
            "name": "threshold",
            "ports": {
                "max_val": 255.0,
                "threshold": 127.0,
                "type": "THRESH_BINARY_INV",
                "use_otsu": false,
                "use_triangle": false
            },
            "type": "opencv/sequence/threshold"
        },
        "unsigned_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 443.354705810547,
                    "y": 522.115539550781
                }
            },
            "name": "unsigned width",
            "ports": {
                "name": "image_width"
            },
            "type": "render/uniforms/unsigned"
        },
        "unsigned_1": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 440.659637451172,
                    "y": 724.107055664062
                }
            },
            "name": "unsigned height",
            "ports": {
                "name": "image_height"
            },
            "type": "render/uniforms/unsigned"
        },
        "viewport_0": {
            "blind_data": {
                "type": "possumwood::NodeData",
                "value": {
                    "x": 462.072967529297,
                    "y": 896.510070800781
                }
            },
            "name": "viewport",
            "type": "render/uniforms/viewport"
        }
    },
    "ports": {
        "refocus": {
            "in_progress_updates": true,
            "max": 5.0,
            "min": -5.0,
            "type": "linear",
            "value": -5.0
        },
        "x_position": {
            "in_progress_updates": true,
            "max": 1.0,
            "min": 0.0,
            "type": "linear",
            "value": 0.679000020027161
        }
    },
    "scene_config": {
        "end_time": 5.0,
        "fps": 24.0,
        "start_time": 0.0
    },
    "type": "network",
    "ui_geometry": "AdnQywADAAAAAAAAAAAAAAAABqoAAAOfAAAAAAAAABQAAAQ6AAACkwAAAAACAAAABqsAAAAAAAAAFwAABqoAAAOf",
    "ui_state": "AAAA/wAAAAD9AAAAAgAAAAAAAAKRAAAC+fwCAAAAAfsAAAAKAGcAcgBhAHAAaAEAAAB1AAAC+QAAAJsBAAADAAAAAQAAAagAAAL5/AIAAAAC+wAAABQAcAByAG8AcABlAHIAdABpAGUAcwEAAAB1AAABOwAAAHkBAAAD+wAAAAwAZQBkAGkAdABvAHIBAAABsQAAAb0AAACtAQAAAwAAAnAAAAL5AAAABAAAAAQAAAAIAAAACPwAAAAA"
}